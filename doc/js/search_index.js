var search_data = {"index":{"searchIndex":["fraccion","matrizdensa","matrizdispersa","matrizhm","object","%()","*()","*()","*()","+()","+()","+()","-()","-()","-()","-@()","/()","<=>()","==()","==()","producto_escalar()","[]()","[]=()","abs()","comprobar()","constructor()","denom()","gcd()","matriz_identidad()","maximo()","maximo()","minimo()","minimo()","new()","new()","new()","num()","reciprocal()","to_f()","to_s()","to_s()","to_s()","gemfile","guardfile","license","readme","rakefile","created.rid","matriz.rb~","racional.rb~","matrizhm.gemspec","matriz_spec.rb~"],"longSearchIndex":["fraccion","matrizdensa","matrizdispersa","matrizhm","object","fraccion#%()","fraccion#*()","matrizdensa#*()","matrizdispersa#*()","fraccion#+()","matrizdensa#+()","matrizdispersa#+()","fraccion#-()","matrizdensa#-()","matrizdispersa#-()","matrizdensa#-@()","fraccion#/()","fraccion#<=>()","matrizdensa#==()","matrizdispersa#==()","matrizdensa#producto_escalar()","matrizdensa#[]()","matrizdensa#[]=()","fraccion#abs()","matrizdispersa#comprobar()","matrizdensa::constructor()","fraccion#denom()","object#gcd()","matrizdensa#matriz_identidad()","matrizdensa#maximo()","matrizdispersa#maximo()","matrizdensa#minimo()","matrizdispersa#minimo()","fraccion::new()","matrizdensa::new()","matrizdispersa::new()","fraccion#num()","fraccion#reciprocal()","fraccion#to_f()","fraccion#to_s()","matrizdensa#to_s()","matrizdispersa#to_s()","","","","","","","","","",""],"info":[["Fraccion","","Fraccion.html","","<p>Definicion de la clase Fraccion\n"],["MatrizDensa","","MatrizDensa.html","","<p>Construcción de una gema.\n\n<pre>-&gt; Se pretende construir una gema que contenga los principales métodos para ...</pre>\n"],["MatrizDispersa","","MatrizDispersa.html","","<p>#matriz normal class MatrizDensa &lt; Matriz\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-operator\">+</span>(<span class=\"ruby-identifier\">other</span>) \n        <span class=\"ruby-identifier\">suma</span>=<span class=\"ruby-constant\">MatrizDensa</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-constant\">Array</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-ivar\">@filas</span>,<span class=\"ruby-value\">1</span>){<span class=\"ruby-constant\">Array</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-ivar\">@columnas</span>,<span class=\"ruby-value\">1</span>)}) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["MatrizHM","","MatrizHM.html","",""],["Object","","Object.html","",""],["%","Fraccion","Fraccion.html#method-i-25","(other)",""],["*","Fraccion","Fraccion.html#method-i-2A","(other)",""],["*","MatrizDensa","MatrizDensa.html#method-i-2A","(other)","<p>Dos matrices son multiplicables si el numero de columnas de A coincide con\nel numero de filas de B\n"],["*","MatrizDispersa","MatrizDispersa.html#method-i-2A","(other)",""],["+","Fraccion","Fraccion.html#method-i-2B","(other)",""],["+","MatrizDensa","MatrizDensa.html#method-i-2B","(other)","<p>Sobrecargado el + para poder sumar 2 matrices\n"],["+","MatrizDispersa","MatrizDispersa.html#method-i-2B","(other)",""],["-","Fraccion","Fraccion.html#method-i-2D","(*other)",""],["-","MatrizDensa","MatrizDensa.html#method-i-2D","(other)","<p>Sobrecargado el - para poder restar 2 matrices\n"],["-","MatrizDispersa","MatrizDispersa.html#method-i-2D","(other)",""],["-@","MatrizDensa","MatrizDensa.html#method-i-2D-40","()","<p>Realiza el opuesto de una matriz\n"],["/","Fraccion","Fraccion.html#method-i-2F","(other)",""],["<=>","Fraccion","Fraccion.html#method-i-3C-3D-3E","(other)",""],["==","MatrizDensa","MatrizDensa.html#method-i-3D-3D","(other)","<p>Para comprobar que dos matrices son equivalentes,primero se comprueba sus\ndimensiones. Si tienen las …\n"],["==","MatrizDispersa","MatrizDispersa.html#method-i-3D-3D","(other)",""],["Producto_escalar","MatrizDensa","MatrizDensa.html#method-i-Producto_escalar","(other)",""],["[]","MatrizDensa","MatrizDensa.html#method-i-5B-5D","(i,j)",""],["[]=","MatrizDensa","MatrizDensa.html#method-i-5B-5D-3D","(i, j, k)","<p>Funcion que asigna un valor k a una posicion i,j dentro de la matriz\n"],["abs","Fraccion","Fraccion.html#method-i-abs","()",""],["comprobar","MatrizDispersa","MatrizDispersa.html#method-i-comprobar","(hash)",""],["constructor","MatrizDensa","MatrizDensa.html#method-c-constructor","(matriz)",""],["denom","Fraccion","Fraccion.html#method-i-denom","()",""],["gcd","Object","Object.html#method-i-gcd","(u,v)",""],["matriz_identidad","MatrizDensa","MatrizDensa.html#method-i-matriz_identidad","(filas,columnas)",""],["maximo","MatrizDensa","MatrizDensa.html#method-i-maximo","()",""],["maximo","MatrizDispersa","MatrizDispersa.html#method-i-maximo","()","<p>def *(other)\n\n<pre>raise TypeError, &quot;La matriz other no es dispersa&quot; unless other.instance_of? MatrizDispersa ...</pre>\n"],["minimo","MatrizDensa","MatrizDensa.html#method-i-minimo","()",""],["minimo","MatrizDispersa","MatrizDispersa.html#method-i-minimo","()",""],["new","Fraccion","Fraccion.html#method-c-new","(numerador, denominador)",""],["new","MatrizDensa","MatrizDensa.html#method-c-new","(matriz,filas,columnas,hash_no_ceros)",""],["new","MatrizDispersa","MatrizDispersa.html#method-c-new","(matriz,filas,columnas,hash_no_ceros)","<p>modificar el initialize,pues no necesito almacenar los ‘0’ guardar los\nindices donde se encuentran dichos …\n"],["num","Fraccion","Fraccion.html#method-i-num","()",""],["reciprocal","Fraccion","Fraccion.html#method-i-reciprocal","()",""],["to_f","Fraccion","Fraccion.html#method-i-to_f","()",""],["to_s","Fraccion","Fraccion.html#method-i-to_s","()",""],["to_s","MatrizDensa","MatrizDensa.html#method-i-to_s","()","<p>Imprime la matrices\n"],["to_s","MatrizDispersa","MatrizDispersa.html#method-i-to_s","()",""],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’\n<p># Specify your gem’s dependencies in matrizHM.gemspec gemspec\n"],["Guardfile","","Guardfile.html","","<p>guard ‘bundler’ do\n\n<pre>watch('Gemfile')\nwatch(/^.+\\.gemspec/)</pre>\n<p>end\n"],["LICENSE","","LICENSE_txt.html","","<p>Copyright © 2013 TODO: Write your name\n<p>MIT License\n<p>Permission is hereby granted, free of charge, to any …\n"],["README","","README_md.html","","<p>MatrizHM\n<p>TODO: Write a gem description\n<p>Installation\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks”\n<p>$:.unshift File.dirname(__FILE__) + ‘lib’ $:.unshift ‘./lib’, ‘./spec’ …\n"],["created.rid","","doc/created_rid.html","",""],["matriz.rb~","","lib/matriz_rb~.html","","<p># = matriz.rb\n<p>#  Autores &mdash; Hamilton Steven Cubillos García &amp; Marcos Díaz García\n<p>#  Github &mdash; github.com/alu0100545630/prct11 …\n"],["racional.rb~","","lib/racional_rb~.html","","<p>require “./gcd.rb”  #definicion del mcd\n<p># Definicion de la clase Fraccion class Fraccion\n\n<pre>    ...</pre>\n"],["matrizHM.gemspec","","matrizHM_gemspec.html","","<p>lib = File.expand_path(‘../lib’, __FILE__) $LOAD_PATH.unshift(lib) unless\n$LOAD_PATH.include?(lib) require …\n"],["matriz_spec.rb~","","spec/matriz_spec_rb~.html","","<p>require “./lib/matriz.rb”\n<p>describe Matriz do\n\n<pre> before :each do\n       cuarto = Fraccion.new(1,4) ...</pre>\n"]]}}